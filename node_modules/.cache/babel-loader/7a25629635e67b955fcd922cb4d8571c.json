{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Furkan\\\\Desktop\\\\StackoverflowClient\\\\src\\\\Questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    //console.log(\"List mounted\")\n    const getQuestions = async () => {\n      const data = await fetch(\"https://stackoverflowservervs.azurewebsites.net/Stackoverflow/getAllQuestions\");\n      const list = await data.json();\n      return list.questions;\n    };\n\n    getQuestions().then(list => {\n      setList(list);\n    }).catch(() => {\n      setError(\"REST-Server is down\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"16\",\n      height: \"16\",\n      fill: \"currentColor\",\n      class: \"bi bi-search\",\n      viewBox: \"0 0 16 16\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      placeholder: \"search\",\n      className: \"searchInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.filter(p => p.questionContent.toLowerCase().includes(search.toLowerCase())).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/answer/${item.questionId}`,\n          children: item.questionContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        setList([...list, {\n          questionContent: e.target.newQuestion.value\n        }]);\n\n        const addQuestion = async () => {\n          await fetch(`https://stackoverflowservervs.azurewebsites.net/Stackoverflow/post_AddQuestion?questionContent=${e.target.newQuestion.value}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        };\n\n        addQuestion();\n        e.target.newQuestion.value = \"\";\n      },\n      className: \"addForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"newQuestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Questions, \"/Z01bTpx+zBgohIx3Aduroutq6M=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Furkan/Desktop/StackoverflowClient/src/Questions.js"],"names":["React","useEffect","useState","Link","Questions","list","setList","search","setSearch","error","setError","getQuestions","data","fetch","json","questions","then","catch","e","target","value","filter","p","questionContent","toLowerCase","includes","map","item","i","questionId","preventDefault","newQuestion","addQuestion","method","headers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Questions = () => {\r\n    const [list, setList] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log(\"List mounted\")\r\n        const getQuestions = async () => {\r\n            const data = await fetch(\"https://stackoverflowservervs.azurewebsites.net/Stackoverflow/getAllQuestions\");\r\n            const list = await data.json();\r\n\r\n            return list.questions;\r\n        }\r\n        getQuestions().then((list) => {\r\n            setList(list);\r\n        }).catch(() => {\r\n            setError(\"REST-Server is down\")\r\n        });\r\n\r\n    }, [])\r\n    return (\r\n        <div className=\"questions\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n            </svg>\r\n            <input type=\"text\" name=\"search\" value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                placeholder=\"search\" className=\"searchInput\"\r\n            />\r\n            <ul>\r\n                {\r\n                    list.filter(p => p.questionContent.toLowerCase().includes(search.toLowerCase())).map((item, i) =>\r\n                        <li key={i}>\r\n                            <Link to={`/answer/${item.questionId}`}>{item.questionContent}</Link>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n\r\n                setList([...list, { questionContent: e.target.newQuestion.value }]);\r\n\r\n                const addQuestion = async () => {\r\n                    await fetch(`https://stackoverflowservervs.azurewebsites.net/Stackoverflow/post_AddQuestion?questionContent=${e.target.newQuestion.value}`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                    });\r\n                }\r\n                addQuestion();\r\n                \r\n                e.target.newQuestion.value = \"\";\r\n\r\n            }} className=\"addForm\">\r\n                <input type=\"text\" name=\"newQuestion\" />\r\n                <button>Add Question</button>\r\n            </form>\r\n\r\n            {\r\n                error ? <p>{error}</p> : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n"]},"metadata":{},"sourceType":"module"}